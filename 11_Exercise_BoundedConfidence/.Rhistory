}
states[agent] <- TRUE
}
}
}
print(sum(states))
N <- 10000
mu <- 0.25
sigma <- 0.1
threshold <- rnorm(n=N, mean=mu, sd=sigma)
states <- vector(length=N) # vectors in R are filled with FALSE by default
change <- TRUE
while (change)
{
change <- FALSE
Nact <- sum(states)
for (agent in seq(1,N))
{
if (Nact/N > threshold[agent])
{
if (! states[agent])
{
change <- TRUE
}
states[agent] <- TRUE
}
}
}
print(sum(states))
N <- 10000
mu <- 0.25
sigma <- 0.1
threshold <- rnorm(n=N, mean=mu, sd=sigma)
state <- vector(length=N) # vectors in R are filled with FALSE by default
N <- 10000
mu <- 0.25
sigma <- 0.1
threshold <- rnorm(n=N, mean=mu, sd=sigma)
state <- vector(length=N) # vectors in R are filled with FALSE by default
Nact <- sum(state)
for (agent in seq(1,N))
{
if (Nact/N > threshold[agent])
{
state[agent] <- TRUE
}
}
sum(state)
sum(threshold<0)
print(paste("number of active agents:", sum(state)))
print(paste("number of agents with threshold zero or lower:", sum(threshold<=0)))
change <- TRUE
while (change)
{
change <- FALSE
Nact <- sum(states)
for (agent in seq(1,N))
{
if (Nact/N > threshold[agent])
{
if (! states[agent])
{
change <- TRUE
}
states[agent] <- TRUE
}
}
}
print(paste("N active agents:", sum(states)))
N <- 10000
mu <- 0.25
sigma <- 0.1
threshold <- rnorm(n=N, mean=mu, sd=sigma)
state <- vector(length=N) # vectors in R are filled with FALSE by default
Nact <- sum(state)
for (agent in seq(1,N))
{
if (Nact/N >= threshold[agent])
{
state[agent] <- TRUE
}
}
print(paste("number of active agents:", sum(state)))
print(paste("number of agents with threshold zero or lower:", sum(threshold<=0)))
change <- TRUE
while (change)
{
change <- FALSE
Nact <- sum(states)
for (agent in seq(1,N))
{
if (Nact/N > threshold[agent])
{
if (! states[agent])
{
change <- TRUE
}
states[agent] <- TRUE
}
}
}
print(paste("N active agents:", sum(states)))
hist(threshold)
hist(threshold[active])
hist(threshold)
hist(threshold[state])
hist(threshold)
hist(threshold[state], breaks=100)
N <- 10000
mu <- 0.25
sigma <- 0.1
threshold <- rnorm(n=N, mean=mu, sd=sigma)
state <- vector(length=N) # vectors in R are filled with FALSE by default
Nact <- sum(state)
for (agent in seq(1,N))
{
if (Nact/N >= threshold[agent])
{
state[agent] <- TRUE
}
}
print(paste("number of active agents:", sum(state)))
print(paste("number of agents with threshold zero or lower:", sum(threshold<=0)))
change <- TRUE
while (change)
{
change <- FALSE
Nact <- sum(state)
for (agent in seq(1,N))
{
if (Nact/N > threshold[agent])
{
if (! state[agent])
{
change <- TRUE
}
state[agent] <- TRUE
}
}
}
print(paste("N active agents:", sum(state)))
hist(threshold)
hist(threshold[state], breaks=100)
hist(threshold)
hist(threshold[state], breaks=50)
hist(threshold)
hist(threshold[state])
hist(threshold)
hist(threshold[state])
print(paste("Highest threshold of active agents", max(threshold[state])))
thresholdModel <- function(N=10000, mu=0.25, sd=0.1)
{
threshold <- rnorm(n=N, mean=mu, sd=sigma)
state <- vector(length=N) # vectors in R are filled with FALSE by default
change <- TRUE
Act <- NULL
while (change)
{
change <- FALSE
Nact <- sum(state)
Act <- c(Act, Nact)
for (agent in seq(1,N))
{
if (Nact/N > threshold[agent])
{
if (! state[agent])
{
change <- TRUE
}
state[agent] <- TRUE
}
}
}
return(Act)
}
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
thresholdModel <- function(N=10000, mu=0.25, sigma=0.1)
{
threshold <- rnorm(n=N, mean=mu, sd=sigma)
state <- vector(length=N) # vectors in R are filled with FALSE by default
change <- TRUE
Act <- NULL
while (change)
{
change <- FALSE
Nact <- sum(state)
Act <- c(Act, Nact)
for (agent in seq(1,N))
{
if (Nact/N > threshold[agent])
{
if (! state[agent])
{
change <- TRUE
}
state[agent] <- TRUE
}
}
}
return(Act)
}
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A)
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l", rgb(0,0,0,0.1))
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l", color=rgb(0,0,0,0.1))
for(i in seq(1,100))
{
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
lines(A, type="l", color=rgb(0,0,0,0.1))
}
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
plot(A, type="l", col=rgb(0,0,0,0.1))
for(i in seq(1,100))
{
A <- thresholdModel(N=10000, mu=0.25, sigma=0.1)
lines(A, type="l", col=rgb(0,0,0,0.1))
}
?plot
A <- thresholdModel(N=10000, mu=0.25, sigma=0.12)
plot(A, type="l", col=rgb(0,0,0,0.1))
for(i in seq(1,100))
{
A <- thresholdModel(N=10000, mu=0.25, sigma=0.12)
lines(A, type="l", col=rgb(0,0,0,0.1))
}
A <- thresholdModel(N=10000, mu=0.25, sigma=0.13)
plot(A, type="l", col=rgb(0,0,0,0.1))
for(i in seq(1,100))
{
A <- thresholdModel(N=10000, mu=0.25, sigma=0.13)
lines(A, type="l", col=rgb(0,0,0,0.1))
}
A <- thresholdModel(N=10000, mu=0.25, sigma=0.12)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.13)
plot(A, type="l")
A <- thresholdModel(N=10000, mu=0.25, sigma=0.13)
plot(A, type="l", col=rgb(0,0,0,0.1))
for(i in seq(1,100))
{
A <- thresholdModel(N=10000, mu=0.25, sigma=0.13)
lines(A, type="l", col=rgb(0,0,0,0.1))
}
A <- thresholdModel(N=10000, mu=0.25, sigma=0.6)
plot(A, type="l")
plot(rnorm(N=10000, mu=0.25, sigma=0.6))
plot(rnorm(n=10000, mu=0.25, sigma=0.6))
plot(rnorm(n=10000, mu=0.25, sd=0.6))
plot(rnorm(n=10000, mean=0.25, sd=0.6))
abline(v=1, col="red")
hist(rnorm(n=10000, mean=0.25, sd=0.6))
abline(v=1, col="red")
c(1,2,3)[1]
c(1,2,3)[-1]
Nsim <- 100
res <- NULL
for (sigma in seq(0,1, by=0.1))
{
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=10000, mu=0.25, sigma)
res <- rbind(res, data.frame(sigma, Nact=A[length(A)]))
}
}
plot(res$sigma, res$Nact)
boxplot(res$sigma, res$Nact)
?boxplot
boxplot(Nact~sigma, res)
Nsim <- 100
res <- NULL
for (sigma in seq(0,1, by=0.1))
{
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu=0.25, sigma)
res <- rbind(res, data.frame(sigma, Nact=A[length(A)]))
}
}
boxplot(Nact~sigma, res)
Nsim <- 100
res <- NULL
for (sigma in seq(0.1,0.2, by=0.005))
{
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu=0.25, sigma)
res <- rbind(res, data.frame(sigma, Nact=A[length(A)]))
}
}
boxplot(Nact~sigma, res)
Nsim <- 100
res <- NULL
for (sigma in seq(0.1,0.2, by=0.005))
{
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu=0.25, sigma)
res <- rbind(res, data.frame(sigma, Nact=A[length(A)]))
}
}
plot(Nact~sigma, res)
Nsim <- 100
res <- NULL
for (sigma in seq(0.1,0.2, by=0.005))
{
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu=0.25, sigma)
res <- rbind(res, data.frame(sigma, Nact=A[length(A)]))
}
}
plot(Nact~sigma, res, pch=19, col=rgb(0,0,0,0.1))
Nsim <- 100
res <- NULL
for (sigma in seq(0.1,0.2, by=0.005))
{
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=10000, mu=0.25, sigma)
res <- rbind(res, data.frame(sigma, Nact=A[length(A)]))
}
}
plot(Nact~sigma, res, pch=19, col=rgb(0,0,0,0.1))
Nsim <- 100
res <- NULL
for (mu in seq(0, 0.5, by=0.05))
{
for (sigma in seq(0,1, by=0.1))
{
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu, sigma)
res <- rbind(res, data.frame(mu, sigma, Nact=A[length(A)]))
}
}
}
Nsim <- 100
res <- NULL
for (mu in seq(0, 0.5, by=0.05))
{
for (sigma in seq(0,1, by=0.1))
{
vres <- NULL
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu, sigma)
vres <- c(vres, A[length(A)])
}
res <- rbind(res, data.frame(mu, sigma, mnN=mean(vres) ))
}
}
head(res)
heatmap(res)
?heatmap
heatmap(as.matrix(res))
library(plot.matrix)
as.matrix(res)
plot()
res$sigma[res$mu==0]
for (mu in seq(0, 0.5, by=0.05))
{
lines(res$sigma[res$mu==mu], res$mnN[res$mu==mu], col=mu)
}
plot.new()
for (mu in seq(0, 0.5, by=0.05))
{
lines(res$sigma[res$mu==mu], res$mnN[res$mu==mu], col=mu)
}
plot(res$sigma[res$mu==mu], res$mnN[res$mu==mu], col=mu)
for (mu in seq(0.05, 0.5, by=0.05))
{
lines(res$sigma[res$mu==mu], res$mnN[res$mu==mu], col=mu)
}
plot(res$sigma[res$mu==mu], res$mnN[res$mu==mu], col=mu, ylim=c(0,1000))
for (mu in seq(0.05, 0.5, by=0.05))
{
lines(res$sigma[res$mu==mu], res$mnN[res$mu==mu])
}
Nsim <- 100
res <- NULL
for (mu in seq(0, 0.4, by=0.025))
{
for (sigma in seq(0,1, by=0.1))
{
vres <- NULL
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu, sigma)
vres <- c(vres, A[length(A)])
}
res <- rbind(res, data.frame(mu, sigma, mnN=mean(vres) ))
}
}
plot(res$sigma[res$mu==mu], res$mnN[res$mu==mu], col=mu, ylim=c(0,1000))
for (mu in seq(0.05, 0.4, by=0.025))
{
lines(res$sigma[res$mu==mu], res$mnN[res$mu==mu])
}
library(ggplot2)
ggplot(res, aes(mu, sigma, fill= mnN)) +
geom_tile()
Nsim <- 100
res <- NULL
for (mu in seq(0, 0.4, by=0.025))
{
for (sigma in seq(0,1, by=0.5))
{
vres <- NULL
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu, sigma)
vres <- c(vres, A[length(A)])
}
res <- rbind(res, data.frame(mu, sigma, mnN=mean(vres) ))
}
}
library(ggplot2)
ggplot(res, aes(mu, sigma, fill= mnN)) +
geom_tile()
Nsim <- 100
res <- NULL
for (mu in seq(0, 0.4, by=0.025))
{
for (sigma in seq(0,1, by=0.5))
{
vres <- NULL
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu, sigma)
vres <- c(vres, A[length(A)])
}
res <- rbind(res, data.frame(mu, sigma, mnN=mean(vres) ))
}
}
library(ggplot2)
ggplot(res, aes(mu, sigma, fill= mnN)) +
geom_tile()
Nsim <- 100
res <- NULL
for (mu in seq(0, 0.4, by=0.025))
{
for (sigma in seq(0,0.5, by=0.1))
{
vres <- NULL
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu, sigma)
vres <- c(vres, A[length(A)])
}
res <- rbind(res, data.frame(mu, sigma, mnN=mean(vres) ))
}
}
library(ggplot2)
ggplot(res, aes(mu, sigma, fill= mnN)) +
geom_tile()
?geom_tile
Nsim <- 100
res <- NULL
for (mu in seq(0, 0.4, by=0.01))
{
for (sigma in seq(0,0.5, by=0.1))
{
vres <- NULL
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu, sigma)
vres <- c(vres, A[length(A)])
}
res <- rbind(res, data.frame(mu, sigma, mnN=mean(vres) ))
}
}
library(ggplot2)
ggplot(res, aes(mu, sigma, fill= mnN)) +
geom_tile()
Nsim <- 100
res <- NULL
for (mu in seq(0, 0.4, by=0.01))
{
for (sigma in seq(0,0.3, by=0.01))
{
vres <- NULL
for (i in seq(1,Nsim))
{
A <- thresholdModel(N=1000, mu, sigma)
vres <- c(vres, A[length(A)])
}
res <- rbind(res, data.frame(mu, sigma, mnN=mean(vres) ))
}
}
library(ggplot2)
ggplot(res, aes(mu, sigma, fill= mnN)) +
geom_tile()
